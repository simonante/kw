version: 2
jobs:
  build:
    docker:
      - image: debian:stretch

    steps:
      - checkout

      - run:
          name: update apt-cache
          command: apt-get update

      - run:
          name: Install apt packages needed for build
          command: apt-get install -y curl xz-utils python git golang-go bsdtar wget

      - run:
          name: pull submodules
          command: |
            git submodule init
            git submodule update --remote
      - run:
          name: Get toolchain
          command: curl https://storage.googleapis.com/remarkable-codex-toolchain/codex-x86_64-cortexa7hf-neon-rm11x-toolchain-3.1.15.sh -o install-toolchain.sh

      - run:
          name: make toolchain executable
          command: chmod +x ./install-toolchain.sh

      - run:
          name: Install toolchain
          command: |
            locale
            ./install-toolchain.sh
            
      - run:
          name: ls
          command: |
            ls
            
      - run:
          name: ls
          command: |
            ls /opt/codex/rm11x/3.1.15/sysroots/x86_64-codexsdk-linux/usr/libexec/arm-remarkable-linux-gnueabi/gcc/arm-remarkable-linux-gnueabi/9.3.0
           
      - run:
          name: Install qtcreator
          command: apt-get install -y qtcreator 

      - run:
          name: Install ghr before sourcing new toolchain
          command: |
              wget https://dl.google.com/go/go1.14.2.linux-amd64.tar.gz
              tar -xvf go1.14.2.linux-amd64.tar.gz
              mv go /usr/local/
              export GOROOT=/usr/local/go
              mkdir -p ./go
              export GOPATH=`pwd`/go
              export PATH=$GOPATH/bin:$GOROOT/bin:$PATH
              go get -u github.com/tcnksm/ghr
                            
      - run:
          name: Build
          command: |
            ls /usr/local
            source /opt/codex/rm11x/3.1.15/environment-setup-cortexa7hf-neon-remarkable-linux-gnueabi
            qmake edit.pro -spec linux-oe-g++ 
            /usr/bin/make
            
      - run:
          name: where are all the files?
          command: find .

      - store_artifacts:
          path: edit
          destination: edit

      - run:
          name: Ship tagged build artifacts to github
          command: |
              if [ "${CIRCLE_TAG}" != "" ] ; then ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -replace ${CIRCLE_TAG} ./artifacts/; fi
